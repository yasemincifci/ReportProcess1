<Activity mc:Ignorable="sap sap2010" x:Class="Raporlama3" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dictDBConnections" Type="InArgument(scg:Dictionary(x:String, ui:DatabaseConnection))" />
    <x:Property Name="io_strListAttachments" Type="InOutArgument(scg:List(x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1226,5103</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Raporlama3_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Raporlama3" sap:VirtualizedContainerService.HintSize="462,5038" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strVBAFilePath" />
      <Variable x:TypeArguments="x:String" Name="strOutputFilePath1" />
      <Variable x:TypeArguments="x:String" Name="strOutputFilePath2" />
      <Variable x:TypeArguments="x:String" Name="strOutputFilePath3" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="workbook" />
      <Variable x:TypeArguments="x:String" Name="strExcelName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Raporlama 3 sequence başladı. &quot; + Now.ToString]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DBConnect workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\DBConnect.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, ui:DatabaseConnection)" x:Key="out_dictDBConnections">[in_dictDBConnections]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_68">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strVBAFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_VBA").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strOutputFilePath1]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName1").ToString,Today.ToString("ddMMMMyyyy", new CultureInfo("tr-TR")))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strOutputFilePath2]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName2").ToString,Today.ToString("ddMMMMyyyy", new CultureInfo("tr-TR")))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_79">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strExcelName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.format(in_Config("OutputFileName3").ToString,Today.ToString("ddMMMMyyyy", new CultureInfo("tr-TR")))]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Çıktı oluştur" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strFilePathTemplate" />
        <Variable x:TypeArguments="si:FileInfo" Name="OutputFileInfo" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strFilePathTemplate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_Template2").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strOutputFilePath3]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName3").ToString,Today.ToString("ddMMMMyyyy", new CultureInfo("tr-TR")))]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Oluşturulacak çıktı ile aynı isimde dosya varsa sil" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[File.Exists(strOutputFilePath3)]" sap:VirtualizedContainerService.HintSize="484,321" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="284,133" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[strOutputFilePath3]" />
          </If.Then>
        </If>
      </Sequence>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="si:FileInfo">[OutputFileInfo]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(Path.Combine(String.Format(in_Config("FilePath_Template3").ToString,in_Config("logF_BusinessProcessName").ToString)))]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;FolderPath_Output&quot;).ToString]" DisplayName="Copy File Template" sap:VirtualizedContainerService.HintSize="434,158" sap2010:WorkflowViewState.IdRef="CopyFile_1" Path="[OutputFileInfo.FullName]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CopyFile>
      <ui:RenameFileX DisplayName="Rename File Template" FilePath="[in_Config(&quot;FolderPath_Output&quot;).ToString+OutputFileInfo.name]" sap:VirtualizedContainerService.HintSize="434,142" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="False" NewName="[String.format(in_Config(&quot;OutputFileName3&quot;).ToString,Today.ToString(&quot;ddMMMMyyyy&quot;, new CultureInfo(&quot;tr-TR&quot;)))]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:RenameFileX>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Sayfa MUKELLEF SAYISI için işleme başlanıldı. &quot; + Now.ToString]" />
    <Sequence DisplayName="MUKELLEF SAYISI SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Object" Name="objFindText" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="496,61" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">1-Sicil-Kaynak-Döküm</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="496,61" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">MUKELLEF_SAYI</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="496,494" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath1]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,427" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{&quot;Defterdarlıklar Toplamı&quot;, strSourceSheetName, &quot;A1:A150&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" OutputValue="[objFindText]" />
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A1:G&quot; + intRowNumber.ToString, strExcelName, strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_30" Workbook="[workbook]" />
              <Sequence DisplayName="Altta Bulunun Bilgi Satırlarının Yazdırılması" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_97">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="[&quot;A&quot; + (intRowNumber+4).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[strDestinationSheetName]" Text="Tek Vergi Dairesi Başkanlığı Modeli  : Tek Vergi Dairesi Başkanlığı Modeli (Örnek : Eskişehir VDB.)" />
                <ui:ExcelWriteCell Cell="[&quot;A&quot; + (intRowNumber+5).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[strDestinationSheetName]" Text="Vergi Dairesi                                          : Motorlu Taşıtlar ve KDV İhtisas Vergi dairesi dışında kalan vergi daireleri (Örnek : Çankaya Vd, Beyoğlu Vd.)" />
                <ui:ExcelWriteCell Cell="[&quot;A&quot; + (intRowNumber+6).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[strDestinationSheetName]" Text="Motorlu Taşıtlar Vergi Dairesi             : Sadece Motorlu Taşıtlar için işlem yapan vergi dairesi (MOTOP VD.) (Örnek : Yeğenbey Vd.)" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{ strDestinationSheetName, &quot;A&quot;+ (intRowNumber+4).ToString + &quot;:A&quot; + (intRowNumber+6).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_3" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="496,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Sayfa ŞİRKET TÜRÜ için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="ŞİRKET TÜRÜ SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFindText" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">3-Şirket-Türleri</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_14">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">ŞİRKET TÜRÜ</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,519" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath1]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,529" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_58">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strExcelName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.format(in_Config("OutputFileName3").ToString,Today.ToString("ddMMMMyyyy", new CultureInfo("tr-TR")))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{&quot;TOPLAM&quot;, strSourceSheetName, &quot;A1:A150&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_4" OutputValue="[objFindText]" />
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A1:D&quot; + intRowNumber.ToString, strExcelName, strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_5" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_16" Workbook="[workbook]" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA:" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strDestinationSheetName,  &quot;A10:D&quot;+ intRowNumber.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_65" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A1:D&quot; +intRowNumber.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_64" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Sayfa VERGİ TÜRÜ için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="VERGİ TÜRÜ SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFindText" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_17">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">2-Türkiye-döküm</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">VERGİ_TÜRÜ</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="434,501" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,391" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath1]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,428" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{&quot;DİĞER VERGİLER&quot;, strSourceSheetName, &quot;A1:A450&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_7" OutputValue="[objFindText]" />
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A1:D&quot; + intRowNumber.ToString, strExcelName, strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_8" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_17" Workbook="[workbook]" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A1:D&quot; +intRowNumber.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_9" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Sayfa GELİRİN UNSURLARI için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="GELİRİN UNSURLARI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbConnection" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtGelirinUnsurları" />
        <Variable x:TypeArguments="x:String" Name="strSheetName" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtGelirinUnsurları]" DisplayName="Run query" ExistingDbConnection="[in_dictDBConnections(&quot;DWH&quot;)]" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[in_Config(&quot;sql2&quot;).ToString]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
      </ui:ExecuteQuery>
      <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DataTable="[dtGelirinUnsurları]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:RemoveDataColumn>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_21">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">GELİRİN_UNSURLARI</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtGelirinUnsurları]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[strSheetName]" StartingCell="A9" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A8:B&quot; + (dtGelirinUnsurları.RowCount+8).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_10" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_4" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Sayfa KDV-İHTİSAS için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="KDV_İHTİSAS" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_72">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt5VdDokum" />
        <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
        <Variable x:TypeArguments="x:String" Name="strSheetName" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,510" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath1]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,400" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Object" Name="objFirstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_22">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{ strSheetName, &quot;B&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_11" OutputValue="[objFirstEmptyRow]" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt5VdDokum]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="[&quot;A1:Y&quot; + (CInt(objFirstEmptyRow.ToString)-1).ToString]" SheetName="[strSheetName]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_5" Workbook="[workbook]" />
      <Assign DisplayName="Assign: İhtisas Vegi Daireleri Filtresi" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dt5VdDokum]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[If(dt5VdDokum.AsEnumerable.Any(Function(row) row.Item("VD/MAL MÜDÜRLÜĞÜ ADI").ToString.Trim.Contains("İHTİSAS VERGİ DAİRESİ")), dt5VdDokum.AsEnumerable.Where(Function(row) row.Item("VD/MAL MÜDÜRLÜĞÜ ADI").ToString.Trim.Contains("İHTİSAS VERGİ DAİRESİ")).CopyToDataTable, new DataTable)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[dt5VdDokum.RowCount &gt;0]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="502,384" sap2010:WorkflowViewState.IdRef="Sequence_81">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Kolon ve Row Eklenme, Toplama İşlemi, Çıkarma İşlemi" sap:VirtualizedContainerService.HintSize="440,81" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="GMSİ DIŞINDA FAAL MÜKEL." DataTable="[dt5VdDokum]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="429,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AddDataColumn>
              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="429,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="SetOrdinal">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sd:DataColumn">[dt5VdDokum.Columns("GMSİ DIŞINDA FAAL MÜKEL.")]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:Int32">6</InArgument>
              </InvokeMethod>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt5VdDokum]" DisplayName="For Each Row in Data Table: Eklene kolonun verilerinin oluşturulması" sap:VirtualizedContainerService.HintSize="429,52" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_24">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("GMSİ DIŞINDA FAAL MÜKEL.")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(CurrentRow.Item("FAAL MÜKEL.").ToString) - CInt(CurrentRow.Item("GMSİ").ToString)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <Assign sap:VirtualizedContainerService.HintSize="429,61" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataRow">[dt5VdDokum.NewRow]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="429,52" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(3,dt5VdDokum.ColumnCount-3)]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Int32">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,374" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(dt5VdDokum.AsEnumerable.Sum(function(row) CDbl(row.Item(CInt(kolon.ToString)))))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_28">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(kolon)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
              <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dt5VdDokum]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="429,52" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AddDataRow>
            </Sequence>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Yazılması ve Hücre Biçimlendrirme" sap:VirtualizedContainerService.HintSize="440,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,421" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">KDV_IHTISAS_VD</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt5VdDokum]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[strSheetName]" StartingCell="A3" />
                    <Sequence DisplayName="Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA:" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A2:Z&quot; + (dt5VdDokum.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_12" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Pembe Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A3:Z&quot; +(dt5VdDokum.RowCount+1).ToString, 255,255,204}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_13" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Gri Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (dt5VdDokum.RowCount+2).ToString + &quot;:Z&quot;  + (dt5VdDokum.RowCount+2).ToString,192,192,192}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_14" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA:" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (dt5VdDokum.RowCount+2).ToString + &quot;:Z&quot; + (dt5VdDokum.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_15" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA:" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;D3:Z&quot; + (dt5VdDokum.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_16" />
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="440,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_6" Workbook="[workbook]" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Sayfa İL-BAZI-VD-MM. için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="İL_BAZI_VD_MM. SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_73">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFirstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_30">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">İL_BAZINDA_VD_MALMD.</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">İL_BAZI_VD_MM.</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;B&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_17" OutputValue="[objFirstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Z&quot; + objFirstEmptyRow.ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_18" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_18" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[strDestinationSheetName]" Text="[&quot;VERGİ DAİRESİ BAZINDA VERGİ TÜRLERİ İTİBARİYLE FAAL MÜKELLEF SAYILARI &quot; +today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_19" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_20" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_7" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Sayfa İL-MRK-VD için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="İL_MRK_VD  SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_74">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFirstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_33">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">İL_MERKEZLERİNDEKİ_VD_LER</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_34">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">İL_MRK_VD</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_13" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_34">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;B&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_21" OutputValue="[objFirstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Z&quot; + objFirstEmptyRow.ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_22" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_19" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_33">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[strDestinationSheetName]" Text="[&quot;İL MERKEZLERİNDE BULUNAN VERGİ DAİRELERİNİN VERGİ TÜRLERİ İTİBARİYLE FAAL MÜKELLEF SAYILARI  &quot; +today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_25" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_26" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_8" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Sayfa IL-MRK-DIS-ILCE-VD-MM için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="IL_MRK_DIS_ILCE_VD_MM  SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_75">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFirstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_36">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">İL_BAZINDA_VD_MALMD.</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_37">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">IL_MRK_DIS_ILCE_VD_MM</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_15" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,758" sap2010:WorkflowViewState.IdRef="Sequence_40">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_14" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_38">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;B&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_27" OutputValue="[objFirstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Z&quot; + objFirstEmptyRow.ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_28" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_20" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,455" sap2010:WorkflowViewState.IdRef="Sequence_39">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[strDestinationSheetName]" Text="[&quot;İL MERKEZİ DIŞINDAKİ İLÇELERDE BULUNAN VERGİ DAİRESİ ve MALMÜDÜRLÜKLERİNİN VERGİ TÜRLERİ İTİBARİYLE FAAL MÜKELLEF SAYILARI  &quot; +today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_31" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_32" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_9" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Sayfa IL-ILCE-KARSILASTIRMA için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="IL_ILCE_KARSILASTIRMA  SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_76">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFindText" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_39">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">IL_ILCE_KARSILASTIRMA</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_40">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">IL_ILCE_KARSILASTIRMA</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_17" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_45">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_16" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,428" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{&quot;GENEL TOPLAM&quot;, strSourceSheetName, &quot;A3:A1050&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_33" OutputValue="[objFindText]" />
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_42">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Z&quot; + intRowNumber.ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_34" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_21" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_91">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[strDestinationSheetName]" Text="[today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper + &quot; TARİHİ İTİBARİYLE İL MERKEZİ ve İLÇELER (İl Merkezi Dışındaki) BAZINDA FAAL MÜKELLEF KARŞILAŞTIRMA TABLOSU&quot;]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_35" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_36" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A2:Y&quot; + intRowNumber.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_37" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_10" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Sayfa VD-VE-MM için işleme başlanıldı.&quot;]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="400,62" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="Sayfa VD-VE-MM için işleme başlanıldı." />
    <Sequence DisplayName="VD_ve_MM.   SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_77">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFrstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_43">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">VD_ve_MALMD.</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_44">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">VD_ve_MM.</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_19" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_50">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_48">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;A&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_38" OutputValue="[objFrstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_39" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_22" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[strDestinationSheetName]" Text="[today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper + &quot; TARİHİ İTİBARİYLE VERGİ DAİRESİ ve MALMÜDÜRLÜĞÜ BAZINDA FAAL MÜKELLEFLERE GÖRE SIRALI LİSTE&quot;]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_40" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_41" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A2:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_42" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_11" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Sayfa VD için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="VD   SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_78">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFrstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_46">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">VERGİ_DAİRESİ</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_47">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">VD</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_21" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_55">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_53">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;A&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_43" OutputValue="[objFrstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_44" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_23" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_54">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="[strDestinationSheetName]" Text="[today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper + &quot; TARİHİ İTİBARİYLE VERGİ DAİRESİ BAZINDA FAAL MÜKELLEFLERE GÖRE SIRALI LİSTE&quot;]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_45" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_46" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A2:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_47" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_12" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Sayfa MM için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="MM   SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_79">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFrstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_49">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">MALMÜDÜRLÜĞÜ</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_50">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">MM</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_23" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,384" sap2010:WorkflowViewState.IdRef="Sequence_60">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_22" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_58">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;A&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_48" OutputValue="[objFrstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_49" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_24" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="[strDestinationSheetName]" Text="[today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper + &quot; TARİHİ İTİBARİYLE MALMÜDÜRLÜĞÜ BAZINDA FAAL MÜKELLEFLERE GÖRE SIRALI LİSTE&quot;]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_50" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_51" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A2:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_52" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_13" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Sayfa İL-BAZINDA-TOPLAM için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="İL_BAZINDA_TOPLAM   SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_80">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFrstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_52">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">İL_BAZINDA_TOPLAM</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_53">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">İL_BAZI_TOPLAM</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_25" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_65">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_24" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_63">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;A&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_53" OutputValue="[objFrstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:X&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_54" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_25" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_64">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[strDestinationSheetName]" Text="[today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper + &quot; TARİHİ İTİBARİYLE İL BAZINDA FAAL MÜKELLEFLERE GÖRE SIRALI LİSTE’&quot;]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_55" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_56" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A2:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_57" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_14" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Sayfa BAŞKANLIK-DEFTERDARLIK için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="BASKANLIK_DEFTERDARLIK  SAYFASI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_71">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
        <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
        <Variable x:TypeArguments="x:Object" Name="objFrstEmptyRow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_55">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">BASKANLIK_DEFTERDARLIK</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_56">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">BASKANLIK_DEFTERDARLIK</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verinin Kopyalanması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_27" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,384" sap2010:WorkflowViewState.IdRef="Sequence_70">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strColName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_26" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_68">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSourceSheetName, &quot;A&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_58" OutputValue="[objFrstEmptyRow]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Verini Formatı İle Kopyalanıp Yapıştırılması" EntryMethodName="CopyFromExcelToSecondExcel" EntryMethodParameters="[{strSourceSheetName, &quot;A3:Y&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString, strExcelName, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_59" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_26" Workbook="[workbook]" />
              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_69">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell: Ana Başlık Eklenir" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="[strDestinationSheetName]" Text="[today.ToString(&quot;dd.MMMM.yyyy&quot;, New CultureInfo(&quot;tr-TR&quot;)).ToUpper + &quot; TARİHİ İTİBARİYLE İLLERİN BAŞKANLIK ve DEFTERDARLIK DURUMUNA GÖRE FAAL MÜKELLEFLER LİSTESİ’&quot;]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık _Kalın Başlık" EntryMethodName="Bold" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_60" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Ana Başlık_Ortalama" EntryMethodName="HCenterAlign" EntryMethodParameters="[{strDestinationSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_61" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strDestinationSheetName, &quot;A2:Z&quot; + (CInt(objFrstEmptyRow.ToString)-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_62" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_15" Workbook="[workbook]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="excellerde kopyalama yapıldıgı için,  kopyalama yapılan hücreler seçili olarak kalıyor" DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="400,123" sap2010:WorkflowViewState.IdRef="Sequence_92">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strSheetName" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Excel 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_28" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath1]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_93">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;İşlem Yapılan Excel: &quot; + String.format(in_Config(&quot;OutputFileName1&quot;).ToString,Today.ToString(&quot;ddMMMMyyyy&quot;, new CultureInfo(&quot;tr-TR&quot;)))]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_80">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">1-Sicil-Kaynak-Döküm</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_18" Range="H1" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_81">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">2-Türkiye-döküm</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_19" Range="H1" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_82">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">3-Şirket-Türleri</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_20" Range="H1" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_83">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">4-İl-döküm</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_21" Range="A1" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_84">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_22" Range="A1" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_85">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">5-Vd-döküm_alınmayan</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_23" Range="A2" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_86">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_24" Range="A2" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_87">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">SQL-data</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_25" Range="A2" SheetName="[strSheetName]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_88">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">SQL-data-İL</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_26" Range="A2" SheetName="[strSheetName]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_27" Workbook="[workbook]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelCloseWorkbook>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Excel 2" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_29" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath2]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,2183" sap2010:WorkflowViewState.IdRef="Sequence_94">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;İşlem Yapılan Excel: &quot; + String.format(in_Config(&quot;OutputFileName2&quot;).ToString,Today.ToString(&quot;ddMMMMyyyy&quot;, new CultureInfo(&quot;tr-TR&quot;)))]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_89">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">ORJİNAL</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_27" Range="A1" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_90">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">İL_BAZINDA_VD_MALMD.</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_28" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_91">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">İL_MERKEZLERİNDEKİ_VD_LER</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_29" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_92">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">İLÇE_BAZINDA_VD_MALMD.</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_30" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_93">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">IL_ILCE_KARSILASTIRMA</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_31" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_94">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">VD_ve_MALMD.</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_32" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_95">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">VERGİ_DAİRESİ</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_33" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_96">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">MALMÜDÜRLÜĞÜ</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_34" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_97">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">İL_BAZINDA_TOPLAM</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_35" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_98">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">BASKANLIK_DEFTERDARLIK</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_36" Range="A2" SheetName="[strSheetName]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_28" Workbook="[workbook]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelCloseWorkbook>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Excel 3" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_30" InstanceCachePeriod="3000" Workbook="[workbook]" WorkbookPath="[strOutputFilePath3]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,2987" sap2010:WorkflowViewState.IdRef="Sequence_95">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;İşlem Yapılan Excel: &quot; + String.format(in_Config(&quot;OutputFileName3&quot;).ToString,Today.ToString(&quot;ddMMMMyyyy&quot;, new CultureInfo(&quot;tr-TR&quot;)))]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_99">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">MUKELLEF_SAYI</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_37" Range="H1" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_100">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">ŞİRKET TÜRÜ</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_38" Range="H1" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_101">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">VERGİ_TÜRÜ</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_39" Range="H1" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_102">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">GELİRİN_UNSURLARI</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_40" Range="H1" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_103">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">KDV_IHTISAS_VD</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_41" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_104">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">İL_BAZI_VD_MM.</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_42" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_105">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">İL_MRK_VD</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_43" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_106">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">IL_MRK_DIS_ILCE_VD_MM</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_44" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_107">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">IL_ILCE_KARSILASTIRMA</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_45" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_108">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">VD_ve_MM.</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_46" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_109">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">VD</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_47" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_110">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">MM</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_48" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_111">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">İL_BAZI_TOPLAM</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_49" Range="A2" SheetName="[strSheetName]" />
              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_112">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">BASKANLIK_DEFTERDARLIK</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_50" Range="A2" SheetName="[strSheetName]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_29" Workbook="[workbook]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelCloseWorkbook>
    </Sequence>
    <AddToCollection x:TypeArguments="x:String" Collection="[io_strListAttachments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="400,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[strOutputFilePath3]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DBDisconnect workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\DBDisconnect.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:DatabaseConnection)" x:Key="in_dictDBConnections">[in_dictDBConnections]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Raporlama 3 sequence tamamlandı.&quot; + Now.ToString]" />
  </Sequence>
</Activity>