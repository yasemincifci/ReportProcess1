<Activity mc:Ignorable="sap sap2010" x:Class="Raporlama1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dictDBConnections" Type="InArgument(scg:Dictionary(x:String, ui:DatabaseConnection))" />
    <x:Property Name="io_strListAttachments" Type="InOutArgument(scg:List(x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1156,4551</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Raporlama1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="39">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Raporlama1" sap:VirtualizedContainerService.HintSize="462,4486" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strVBAFilePath" />
      <Variable x:TypeArguments="x:String" Name="strOutputFilePath" />
      <Variable x:TypeArguments="x:String" Name="strSheetName" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="workBook" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtQueryResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Raporlama 1 sequence başladı. &quot; + Now.ToString]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DBConnect workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" UnSafe="False" WorkflowFileName="Framework\DBConnect.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, ui:DatabaseConnection)" x:Key="out_dictDBConnections">[in_dictDBConnections]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[io_strListAttachments]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(Of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_288">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strVBAFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_VBA").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Çıktı oluştur" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="si:FileInfo" Name="OutputFileInfo" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Oluşturulacak çıktı ile aynı isimde dosya varsa sil" sap:VirtualizedContainerService.HintSize="434,365" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="strFilePathTemplate" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strFilePathTemplate]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_Template1").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName1").ToString,Today.ToString("ddMMMMyyyy", new CultureInfo("tr-TR")))]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[File.Exists(strOutputFilePath)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="284,133" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[strOutputFilePath]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:Delete>
          </If.Then>
        </If>
      </Sequence>
      <Assign DisplayName="Private: Assign" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="si:FileInfo">[OutputFileInfo]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(Path.Combine(String.Format(in_Config("FilePath_Template1").ToString,in_Config("logF_BusinessProcessName").ToString)))]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;FolderPath_Output&quot;).ToString]" DisplayName="Copy File Template" sap:VirtualizedContainerService.HintSize="434,158" sap2010:WorkflowViewState.IdRef="CopyFile_1" Path="[OutputFileInfo.FullName]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CopyFile>
      <ui:RenameFileX DisplayName="Rename File Template" FilePath="[in_Config(&quot;FolderPath_Output&quot;).ToString+OutputFileInfo.name]" sap:VirtualizedContainerService.HintSize="434,142" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="True" NewName="[String.format(in_Config(&quot;OutputFileName1&quot;).ToString,Today.ToString(&quot;ddMMMMyyyy&quot;, new CultureInfo(&quot;tr-TR&quot;)))]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:RenameFileX>
    </Sequence>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtQueryResult]" DisplayName="Run query" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="400,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[in_Config(&quot;sql1&quot;).ToString]">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Sayfa SQL-data için işleme başlanıldı. &quot; + Now.ToString]" />
    <Sequence sap2010:Annotation.AnnotationText="Sorgu sonucunda gelen veri SQL-data sayfasına yazdırılır. Şirket-Türleri haricindeki sayfalar otomatik olarak oluşturulmuş olur." DisplayName="Ana verini yazdırılması" sap:VirtualizedContainerService.HintSize="400,848" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Sorgu sonucu MALMD.LÜĞÜ&quot; olanlar MALMÜDÜRLÜĞÜ, VD olanlar VERGİ DAİRESİ olarak değiştirilir." DataTable="[dtQueryResult]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,124" sap2010:WorkflowViewState.IdRef="ForEachRow_25">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="907,433" sap2010:WorkflowViewState.IdRef="Sequence_208">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[CurrentRow.Item(1).ToString.Trim.Contains(&quot;MALMD.LÜĞÜ&quot;)]" sap:VirtualizedContainerService.HintSize="845,322" sap2010:WorkflowViewState.IdRef="If_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_205">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_289">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[dtQueryResult.Columns(1).MaxLength]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">40</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_290">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item(1)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CurrentRow.Item(1).ToString.Trim.Replace("MALMD.LÜĞÜ", "MALMÜDÜRLÜĞÜ")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,163" sap2010:WorkflowViewState.IdRef="Sequence_207">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[CurrentRow.Item(1).ToString.Trim.Contains(&quot;VD.&quot;)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,273" sap2010:WorkflowViewState.IdRef="Sequence_206">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_291">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[dtQueryResult.Columns(1).MaxLength]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">40</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_292">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item(1)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[CurrentRow.Item(1).ToString.Trim.Replace("VD.", "VERGİ DAİRESİ")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Durum kolundayazıla verler düzenlenir:&#xA;- EVDO_Malmd -&gt;  e_VDB_Malmd&#xA;- EVDO -&gt; e_VDB&#xA;- EVDO_Motop -&gt; Motop_EVDB&#xA;- VD/MAL MÜDÜRLÜĞÜ ADI kolonunda, adında ‘İHTİSA’ geçen verilerin için KDV_İhtisas &#xA;- VDKODU: 026250&#xA;VD ADI: ESKİŞEHİR VD.BŞK.LIĞI olan kayıt için DURUM kolonuna  Tek_Vd_e_VDB &#xA;&#xA;" DataTable="[dtQueryResult]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,274" sap2010:WorkflowViewState.IdRef="ForEachRow_26">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_221">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[CurrentRow.Item(&quot;VDADI&quot;).ToString.Trim.Contains(&quot;İHTİSAS&quot;) or CurrentRow.Item(&quot;VDADI&quot;).ToString.Trim.Contains(&quot;İHTİSA&quot;)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_222">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_295">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("DURUM")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["KDV_İhtisas"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <If Condition="[CurrentRow.Item(&quot;DURUM&quot;).ToString.Trim.Equals(&quot;EVDO_Malmd&quot;)]" sap:VirtualizedContainerService.HintSize="645,240" sap2010:WorkflowViewState.IdRef="If_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_224">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_296">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("DURUM")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">["e_VDB_Malmd"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <If Condition="[CurrentRow.Item(&quot;DURUM&quot;).ToString.Trim.Equals(&quot;EVDO&quot;)]" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_20">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_226">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_297">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("DURUM")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["e_VDB"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <If Condition="[CurrentRow.Item(&quot;DURUM&quot;).ToString.Trim.Equals(&quot;EVDO_Motop&quot;)]" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_227">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_298">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("DURUM")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">["Motop_EVDB"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <If Condition="[CurrentRow.Item(&quot;VDADI&quot;).ToString.Trim.Equals(&quot;ESKİŞEHİR VD.BŞK.LIĞI&quot;) AndAlso CurrentRow.Item(&quot;VDKODU&quot;).ToString.Trim.Equals(&quot;026250&quot;)]" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_22">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_228">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_299">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("DURUM")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">["Tek_Vd_e_VDB"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">SQL-data</InArgument>
        </Assign.Value>
      </Assign>
      <ui:WriteRange AddHeaders="False" DataTable="[dtQueryResult]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="338,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[strSheetName]" StartingCell="A3" WorkbookPath="[strOutputFilePath]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Sayfa SQL-data-1 için işleme başlanıldı.&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="" DisplayName="SQL-data-1 Sayfası" sap:VirtualizedContainerService.HintSize="462,344" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtilBilgisi" />
        <Variable x:TypeArguments="x:String" Name="strLastColName" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtSqlData1" />
        <Variable x:TypeArguments="x:Int32" Name="intRowIndex" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Ana Verinin Oluşturulması ve Excele Yazılması" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="İl bilgisi excelinin okunması ve il kodlarının başına 0 ekleme" sap:VirtualizedContainerService.HintSize="444,81" sap2010:WorkflowViewState.IdRef="Sequence_112">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadExcelTemp workflow" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Framework\ReadExcelTemp.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExcelName">ilListesi</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dataTable">[dtilBilgisi]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_FirstColName">A</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LastColName">C</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_FirstRowIndex">1</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LastRowIndex">82</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrSheetName">Sayfa1</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="PadLeft ile il kodlarınanın başına 0 eklenir, total 3hane olacak sekıde" DataTable="[dtilBilgisi]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_111">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_142">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item(1)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(1).ToString.PadLeft(3,"0"c).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
        <Sequence DisplayName="Başkanlık / Defterdalık Kolonu Ekleme ve DT'e Bu Bilgileri Ekleme" sap:VirtualizedContainerService.HintSize="444,81" sap2010:WorkflowViewState.IdRef="Sequence_116">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="395,61" sap2010:WorkflowViewState.IdRef="Assign_143">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
            </Assign.Value>
          </Assign>
          <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="BaskanlikDefterdarlik" DataTable="[dtQueryResult]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="395,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataColumn>
          <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="395,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="SetOrdinal">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:DataColumn">[dtQueryResult.Columns("BaskanlikDefterdarlik")]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:Int32">3</InArgument>
          </InvokeMethod>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Sorgu sonucunda elde edilen dt'ye kılon eklendikten sonra, bu kolon her ile göre başkanlık / defterdarlık şeklinde doldurulur." DataTable="[dtQueryResult]" DisplayName="For Each Row in Data Table: Başkanlık Deterdarlık Belirleme" sap:VirtualizedContainerService.HintSize="395,94" sap2010:WorkflowViewState.IdRef="ForEachRow_14">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="642,763" sap2010:WorkflowViewState.IdRef="Sequence_115">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtilBilgisi]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="580,652" sap2010:WorkflowViewState.IdRef="ForEachRow_13">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ilKodu" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="546,536" sap2010:WorkflowViewState.IdRef="Sequence_114">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[CInt(CurrentRow.Item(0).ToString.Substring(0,3).ToString) = CInt(ilKodu.Item(1).ToString)]" sap:VirtualizedContainerService.HintSize="484,425" sap2010:WorkflowViewState.IdRef="If_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,237" sap2010:WorkflowViewState.IdRef="Sequence_113">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtNewData" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_144">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item(3)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[ilKodu.Item(2).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:Break sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Break_3" />
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
        <Sequence DisplayName="İl Toplamlarının Oluşturulması ve Excele Yazılması, Biçimlendirilmesi" sap:VirtualizedContainerService.HintSize="444,81" sap2010:WorkflowViewState.IdRef="Sequence_122">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="dtNewData" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="382,61" sap2010:WorkflowViewState.IdRef="Assign_145">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dtNewData]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[dtQueryResult.AsEnumerable.CopyToDataTable]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="382,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[dtNewData.ColumnCount]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign sap:VirtualizedContainerService.HintSize="382,61" sap2010:WorkflowViewState.IdRef="Assign_146">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">3</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="her bir il eklenerek toplamları alınır" DataTable="[dtilBilgisi]" DisplayName="For Each Row in Data Table: İl İsimleri ve İl Toplamı" sap:VirtualizedContainerService.HintSize="382,83" sap2010:WorkflowViewState.IdRef="ForEachRow_15">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ilKodu" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="594,1811" sap2010:WorkflowViewState.IdRef="Sequence_120">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ClearDataTable DataTable="[dtNewData]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="532,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_2" />
                  <Assign sap:VirtualizedContainerService.HintSize="532,61" sap2010:WorkflowViewState.IdRef="Assign_147">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[dtNewData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[If(dtQueryResult.AsEnumerable.Any(Function(row) row.Item(0).ToString.Trim.StartsWith(ilKodu.Item(1).ToString)), dtQueryResult.AsEnumerable.Where(Function(row) row.Item(0).ToString.Trim.StartsWith(ilKodu.Item(1).ToString)).CopyToDataTable, new DataTable)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[dtNewData.RowCount &gt; 0]" sap:VirtualizedContainerService.HintSize="532,1479" sap2010:WorkflowViewState.IdRef="If_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="496,1291" sap2010:WorkflowViewState.IdRef="Sequence_119">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_148">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtNewData.NewRow]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Enumerable.Range(4,dtNewData.ColumnCount-4)]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="toplam" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,374" sap2010:WorkflowViewState.IdRef="Sequence_117">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_149">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_150">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[dtNewData.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString))))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_151">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_152">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ilKodu.Item(0).ToString.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNewData]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddDataRow_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,693" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_17" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strOutputFilePath]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,583" sap2010:WorkflowViewState.IdRef="Sequence_118">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewData]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="[strSheetName]" StartingCell="[&quot;A&quot; +intRowIndex.ToString]" />
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Sarı Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:&quot; + strLastColName +((dtNewData.RowCount -1) + intRowIndex).ToString, 255,255,153}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_78" />
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Gri Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (dtNewData.RowCount -1 + intRowIndex).ToString + &quot;:&quot; + strLastColName +(dtNewData.RowCount -1 + intRowIndex).ToString, 192,192,192}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_79" />
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Gri Renk" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (dtNewData.RowCount -1 + intRowIndex).ToString + &quot;:&quot; + strLastColName +(dtNewData.RowCount -1 + intRowIndex).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_80" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelApplicationScope>
                        <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_153">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intRowIndex + CInt(dtNewData.RowCount.ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Ana Veri Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="382,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,427" sap2010:WorkflowViewState.IdRef="Sequence_121">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A3:&quot; + strLastColName +(intRowIndex-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_81" />
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;E3:&quot; + strLastColName +(intRowIndex-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_82" />
                  <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSqlData1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_17" Range="[&quot;A3:&quot; + strLastColName + (intRowIndex-1).ToString]" SheetName="[strSheetName]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="382,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[workBook]" />
        </Sequence>
      </Sequence>
      <Sequence DisplayName="Sağ da yer alan tablo verilerinin Olusturulması" sap:VirtualizedContainerService.HintSize="558,6875" sap2010:WorkflowViewState.IdRef="Sequence_202">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtNextValues" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtSumOfLast5Cols" />
          <Variable x:TypeArguments="sd:DataRow" Name="drNewRow2" />
          <Variable x:TypeArguments="x:String" Name="strFirstColNameForSumCol" />
          <Variable x:TypeArguments="x:Int32" Name="intLastColNumber" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="496,61" sap2010:WorkflowViewState.IdRef="Assign_156">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[dtSqlData1.RowCount+3]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="496,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="496,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+2]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:BuildDataTable DataTable="[dtNextValues]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="496,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_5" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Durum&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Potansiyel&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Faal&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Terk&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tarih_x0020_Dosyası&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tur&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
        <ui:BuildDataTable DataTable="[dtSumOfLast5Cols]" DisplayName="Build Data Table: Özet Tablosu" sap:VirtualizedContainerService.HintSize="496,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_6" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Toplam_x0020_Sayı&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Potansiyel&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Faal&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;KDV_x0020_İhtisas_x0020_Faal&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tarih_x0020_Dosyası&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:BuildDataTable>
        <Assign sap:VirtualizedContainerService.HintSize="496,61" sap2010:WorkflowViewState.IdRef="Assign_157">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strFirstColNameForSumCol]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[strLastColName]</InArgument>
          </Assign.Value>
        </Assign>
        <Sequence DisplayName="EVDO_Motop Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="496,1798" sap2010:WorkflowViewState.IdRef="Sequence_129">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="EVDO_Motop kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,1017" sap2010:WorkflowViewState.IdRef="ForEachRow_16">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,870" sap2010:WorkflowViewState.IdRef="Sequence_126">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_158">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_159">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["EVDO_Motop"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_160">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(2).ToString.Trim.Equals("EVDO_Motop"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_161">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(5).ToString),0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_162">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_163">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_164">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_165">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_166">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each: Kolon toplamları olusturulur" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_127">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_167">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_168">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_169">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_170">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddDataRow_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddDataRow_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="503,1128" sap2010:WorkflowViewState.IdRef="Sequence_128">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Object" Name="objFindText" />
                    <Variable x:TypeArguments="x:String" Name="strSearchValue" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_209">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_115" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_116" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_147" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+6).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[strSheetName]" Text="EVDO_Motop" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_4" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_130">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_3" />
        </Sequence>
        <Sequence DisplayName="Motop_EVDB Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_134">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Motop_EVDB kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_17">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,870" sap2010:WorkflowViewState.IdRef="Sequence_131">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_171">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_172">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Motop_EVDB"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_173">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(2).ToString.Trim.Equals("Motop_EVDB"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_174">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(5).ToString),0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_175">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_176">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_177">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_178">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_179">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each: Kolon toplamları olusturulur" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_132">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_180">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_181">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_182">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_183">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_21" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_133">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_12" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_210">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_117" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_118" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_148" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+7).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="[strSheetName]" Text="Motop_EVDB" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_5" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_135">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_4" />
        </Sequence>
        <Sequence DisplayName="EVDO Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_139">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="EVDO kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_18">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_136">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_184">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_185">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["EVDO"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_186">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(2).ToString.Trim.Equals("EVDO"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_187">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(5).ToString),0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_188">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_189">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_190">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_191">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_192">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each: Kolon toplamları olusturulur" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_137">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_193">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_194">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_195">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_196">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_22" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_138">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_211">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_119" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_120" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_149" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+8).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="[strSheetName]" Text="EVDO" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_6" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_140">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_5" />
        </Sequence>
        <Sequence DisplayName="e_VDB_Malmd Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_144">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="e_VDB_Malmd kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,1017" sap2010:WorkflowViewState.IdRef="ForEachRow_19">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,870" sap2010:WorkflowViewState.IdRef="Sequence_141">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_197">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_198">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["e_VDB_Malmd"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_199">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(2).ToString.Trim.Equals("e_VDB_Malmd"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_200">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(5).ToString),0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_201">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_202">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_203">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_204">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_205">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each: Kolon toplamları olusturulur" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_142">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_206">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_207">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_208">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_209">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_23" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_143">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_212">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_121" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_122" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_150" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+9).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="[strSheetName]" Text="e_VDB_Malmd" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_7" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_145">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_6" />
        </Sequence>
        <Sequence DisplayName="e_VDB Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="496,1798" sap2010:WorkflowViewState.IdRef="Sequence_149">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="e_VDB kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,1017" sap2010:WorkflowViewState.IdRef="ForEachRow_20">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,870" sap2010:WorkflowViewState.IdRef="Sequence_146">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_210">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_211">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["e_VDB"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_212">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(2).ToString.Trim.Equals("e_VDB"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_213">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(5).ToString),0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_214">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_215">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_216">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_217">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_218">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each: Kolon toplamları olusturulur" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_147">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_219">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_220">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_221">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_222">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_23">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_24" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_148">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_15" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_213">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_123" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_124" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_140" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+10).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="[strSheetName]" Text="e_VDB" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_8" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_150">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_7" />
        </Sequence>
        <Sequence DisplayName="Tek_Vd_e_VDB Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="496,81" sap2010:WorkflowViewState.IdRef="Sequence_154">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Tek_Vd_e_VDB kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_21">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,870" sap2010:WorkflowViewState.IdRef="Sequence_151">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_223">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_224">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Tek_Vd_e_VDB"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_225">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(2).ToString.Trim.Equals("Tek_Vd_e_VDB"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_226">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(5).ToString),0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_227">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_228">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_229">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_24">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_230">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_231">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each: Kolon toplamları olusturulur" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_152">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_232">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_233">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_234">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_235">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_25">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_25" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_153">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_16" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_214">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_125" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_126" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_141" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+11).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="[strSheetName]" Text="Tek_Vd_e_VDB" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_9" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_155">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_62" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_8" />
        </Sequence>
        <Sequence DisplayName="KDV_İhtisas Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_161">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="KDV_İhtisas kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_22">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,1004" sap2010:WorkflowViewState.IdRef="Sequence_157">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_237">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_238">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["KDV_İhtisas"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_239">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[If(CurrentRow.Item(2).ToString.Trim.Equals("KDV_İhtisas"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_240">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_241">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object" xml:space="preserve">[If(CInt(drNewRow.Item(0).ToString)=1,  CInt(CurrentRow.Item(11).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_242">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[If(CInt(drNewRow.Item(0).ToString)=1, CInt(CurrentRow.Item(12).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_243">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="AddDataRow_27">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_244">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_245">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_158">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_246">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_247">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_248">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_249">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_28">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_29">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_26" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_159">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_17" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_215">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_63" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_127" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_128" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_142" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+12).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="[strSheetName]" Text="KDV_İhtisas" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_10" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Özet Tablosunun  İlk Bölümünü Yazdırma" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_165">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_250">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[Enumerable.Range(0, dtSumOfLast5Cols.ColumnCount)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_162">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_251">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(kolon.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtSumOfLast5Cols.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(kolon.ToString))))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_30">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_27" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_164">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+13).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_29" SheetName="[strSheetName]" Text="Toplam" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtSumOfLast5Cols]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_18" SheetName="[strSheetName]" StartingCell="[&quot;L&quot; + (intRowIndex+5).ToString]" />
                  <Sequence DisplayName="Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_163">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Mavi Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+5).ToString + &quot;:P&quot; + (intRowIndex+5).ToString, 204, 255, 204}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_83" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Sarı Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;K&quot; + (intRowIndex+6).ToString + &quot;:K&quot; + (intRowIndex+12).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_84" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Gri Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+6).ToString + &quot;:P&quot; + (intRowIndex+12).ToString, 192, 192, 192}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_85" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+6).ToString + &quot;:P&quot; + (intRowIndex+12).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_86" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kırmızımsı Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;K&quot; + (intRowIndex+13).ToString + &quot;:P&quot; + (intRowIndex+13).ToString, 255, 204, 153}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_87" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+6).ToString + &quot;:P&quot; + (intRowIndex+13).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_88" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;K&quot; + (intRowIndex+6).ToString + &quot;:K&quot; + (intRowIndex+13).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_89" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+5).ToString + &quot;:P&quot; + (intRowIndex+13).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_90" />
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_11" Workbook="[workBook]" />
          <ui:ClearDataTable DataTable="[dtSumOfLast5Cols]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="338,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_9" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_166">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_10" />
        </Sequence>
        <Sequence DisplayName="Başkanlık Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_172">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Başkanlık kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_23">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_168">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_252">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_253">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Başkanlık"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_254">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(3).ToString.Trim.Equals("Başkanlık"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_255">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_256">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[If(CInt(drNewRow.Item("Durum").ToString)=1,  CInt(CurrentRow.Item(11).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_257">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(12).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_258">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_259">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_260">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,475" sap2010:WorkflowViewState.IdRef="Sequence_169">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_261">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_262">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_263">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_264">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_32">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_33">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_28" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_170">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_19" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_216">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_129" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_130" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_143" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+15).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_30" SheetName="[strSheetName]" Text="Başkanlık" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_12" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_173">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_11" />
        </Sequence>
        <Sequence DisplayName="Defterdarlık Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_179">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Defterdarlık kolonuna ait veriler dt de olustuurldu" DataTable="[dtSqlData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_24">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_175">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_266">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tur Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_267">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tur")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Defterdarlık"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Durum Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_268">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Durum")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CurrentRow.Item(3).ToString.Trim.Equals("Defterdarlık"), 1,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Potansiyel Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_269">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Faal Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_270">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[If(CInt(drNewRow.Item("Durum").ToString)=1,  CInt(CurrentRow.Item(11).ToString) ,0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Terk Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_271">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[If(CInt(drNewRow.Item("Durum").ToString)=1, CInt(CurrentRow.Item(12).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Tarih Dosyası Kolonu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_272">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Tarih Dosyası")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[If(CInt(drNewRow.Item("Durum").ToString)=1, (CInt(CurrentRow.Item(4).ToString) - CInt(CurrentRow.Item(5).ToString)) + CInt(CurrentRow.Item(6).ToString), 0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_273">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtNextValues.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_274">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_16" Values="[Enumerable.Range(0,dtNextValues.ColumnCount-1)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="toplam" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_176">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_275">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_276">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtNextValues.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(toplam.ToString)).ToString))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_277">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_278">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(toplam.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtNextValues]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_35">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_36">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_29" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_177">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNextValues]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_20" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;3&quot;]" />
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_217">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_67" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+5]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_131" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_132" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_144" />
                  </Sequence>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+16).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_31" SheetName="[strSheetName]" Text="Defterdarlık" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_13" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Özet Tablosunun  2. Bölümünü Yazdırma" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_183">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_279">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dtSumOfLast5Cols.NewRow]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[Enumerable.Range(0, dtSumOfLast5Cols.ColumnCount)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_180">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_280">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow2.Item(CInt(kolon.ToString))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtSumOfLast5Cols.AsEnumerable.Sum(Function(row) CInt(row.Item(CInt(kolon.ToString))))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow2]" DataTable="[dtSumOfLast5Cols]" DisplayName="Add Data Row: Özet Tablosu" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_37">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_30" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,448" sap2010:WorkflowViewState.IdRef="Sequence_182">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteCell Cell="[&quot;K&quot; + (intRowIndex+17).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_32" SheetName="[strSheetName]" Text="Toplam" />
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSumOfLast5Cols]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_21" SheetName="[strSheetName]" StartingCell="[&quot;L&quot; + (intRowIndex+15).ToString]" />
                  <Sequence DisplayName="Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_181">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Sarı Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;K&quot; + (intRowIndex+15).ToString + &quot;:K&quot; + (intRowIndex+16).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_91" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Gri Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+15).ToString + &quot;:P&quot; + (intRowIndex+16).ToString, 192, 192, 192}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_92" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+15).ToString + &quot;:P&quot; + (intRowIndex+16).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_93" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kırmızımsı Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;K&quot; + (intRowIndex+17).ToString + &quot;:P&quot; + (intRowIndex+17).ToString, 255, 204, 153}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_94" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;L&quot; + (intRowIndex+18).ToString + &quot;:P&quot; + (intRowIndex+17).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_95" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;K&quot; + (intRowIndex+5).ToString + &quot;:P&quot; + (intRowIndex+17).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_96" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;K&quot; + (intRowIndex+15).ToString + &quot;:P&quot; + (intRowIndex+17).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_97" />
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_14" Workbook="[workBook]" />
          <ui:ClearDataTable DataTable="[dtSumOfLast5Cols]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ClearDataTable_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ClearDataTable>
        </Sequence>
        <Sequence DisplayName="Son kolon indexi bulunur dt temizlenir" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_184">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ClearDataTable DataTable="[dtNextValues]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_13" />
        </Sequence>
        <Sequence DisplayName="Başkanlık_İhtisas Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_193">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_31" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,2366" sap2010:WorkflowViewState.IdRef="Sequence_192">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strValue" />
                    <Variable x:TypeArguments="x:String" Name="strStartColNameIndex" />
                    <Variable x:TypeArguments="x:String" Name="strFinishColNameIndex" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_281">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strStartColNameIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strLastColName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Durum Toplam Kolonu" EntryMethodName="DiffrentColCellSum" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString ,18,12}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_98" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_185">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_69" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Durum Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,1,2,1,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_99" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_186">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_70" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Potansiyel Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,1,1,-19,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_100" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_187">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_71" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Faal Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,2,1,-19,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_101" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_188">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_72" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Terk Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,3,1,-19,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_102" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_189">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_73" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Tarih Dosyası Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,4,1,-19,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_103" />
                  <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_282">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strFinishColNameIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strLastColName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 5 kolona ait toplam satırı" EntryMethodName="RangeColumnSum" EntryMethodParameters="[{strSheetName, strStartColNameIndex +intRowIndex.ToString, strStartColNameIndex +intRowIndex.ToString + &quot;:&quot; +strFinishColNameIndex +intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_104" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_190">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_74" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_218">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (intRowIndex - 1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_133" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (intRowIndex - 1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_134" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (intRowIndex - 1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_145" />
                  </Sequence>
                  <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_283">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Başkanlık_İhtisas</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Değer Kolonu" EntryMethodName="FillColumnCells" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,strValue}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_105" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_191">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_75" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_15" Workbook="[workBook]" />
        </Sequence>
        <Sequence DisplayName="Defterdarlık_İhtisas Verileri/Kolonları" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_201">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_32" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_200">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strValue" />
                    <Variable x:TypeArguments="x:String" Name="strStartColNameIndex" />
                    <Variable x:TypeArguments="x:String" Name="strFinishColNameIndex" />
                    <Variable x:TypeArguments="x:String" Name="strLastColNameForSumCol" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_284">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strStartColNameIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strLastColName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Durum Toplam Kolonu" EntryMethodName="DiffrentColCellSum" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString ,25,13}]" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_106">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeVBA>
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_194">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_76" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Durum Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,1,2,1,0}]" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_107">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeVBA>
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_195">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_77" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Potansiyel Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,1,1,-26,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_108" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_196">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_78" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Faal Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,2,1,-26,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_109" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_197">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_79" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Terk Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,3,1,-26,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_110" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_198">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_80" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA:Terk Dosyası Kolonu" EntryMethodName="IfFunction" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,4,1,-19,0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_111" />
                  <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_285">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strFinishColNameIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strLastColName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 5 kolona ait toplam satırı" EntryMethodName="RangeColumnSum" EntryMethodParameters="[{strSheetName, strStartColNameIndex +intRowIndex.ToString, strStartColNameIndex +intRowIndex.ToString + &quot;:&quot; +strFinishColNameIndex +intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_112" />
                  <Sequence DisplayName="Son kolon indexi bulunur " sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_199">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_81" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intLastColNumber]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intLastColNumber+1]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <Sequence DisplayName="Son kolonun sarıya boyanması ve çervelenmesi" sap:VirtualizedContainerService.HintSize="400,419" sap2010:WorkflowViewState.IdRef="Sequence_219">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_135" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_136" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;3:&quot; +strLastColName + (dtNextValues.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_146">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeVBA>
                  </Sequence>
                  <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_286">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Defterdarlık_İhtisas</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Değer Kolonu" EntryMethodName="FillColumnCells" EntryMethodParameters="[{strSheetName, strLastColName +&quot;3&quot;, strLastColName +&quot;3:&quot; + strLastColName +(intRowIndex - 1).ToString,strValue}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_113" />
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Yeşil Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strFirstColNameForSumCol + (intRowIndex).ToString + &quot;:&quot; + strLastColName + (intRowIndex).ToString, 153, 204, 0}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_114" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_16" Workbook="[workBook]" />
        </Sequence>
      </Sequence>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Sayfa 5-Vd-dokum için işleme başlanıldı. &quot;]" />
    <Sequence DisplayName="5-Vd-dokum" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_60">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="597,2132" sap2010:WorkflowViewState.IdRef="Sequence_59">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtSQLData1" />
                <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="535,61" sap2010:WorkflowViewState.IdRef="Assign_49">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: İlk boş saıtırın bulumnası" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;H&quot;}]" sap:VirtualizedContainerService.HintSize="535,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_17" OutputValue="[firstEmptyRow]" />
              <Sequence DisplayName="İlk 3 Satır" sap:VirtualizedContainerService.HintSize="535,81" sap2010:WorkflowViewState.IdRef="Sequence_61">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
                  <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_50">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_51">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeVBA OutputValue="{x:Null}" sap2010:Annotation.AnnotationText="SQL-data-1 sayfasından aşağıdaki sütünlar kopyalanarak yeni sayfanın ilk 3 sütunuun verisi oluşturulur:&#xA;- VDKODU&#xA;- VD/MAL MÜDÜRLÜĞÜ ADI&#xA;- DURUM" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: ilk 3 kolonun kopyalaınıp yapıştırılması" EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;A3:C&quot; + (CInt(firstEmptyRow.ToString)-1).ToString, strDestinationSheetName, &quot;A2&quot;}]" sap:VirtualizedContainerService.HintSize="338,190" sap2010:WorkflowViewState.IdRef="InvokeVBA_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
              </Sequence>
              <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="SQL-data-1 sayfasının A:DC kolonarı datatable'a alınır" DataTable="[dtSQLData1]" DisplayName="Read Range: SQL-data-1 sayfası okunur" sap:VirtualizedContainerService.HintSize="535,91" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="[&quot;A3:AI&quot; +(CInt(firstEmptyRow)-1).ToString]" SheetName="[strSheetName]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <Sequence sap2010:Annotation.AnnotationText="SQL_data-1 sayfasından alınan veriler ile 5-Vd-döküm sayfasının aşağıdaki sütünlarının verileri oluşturulur:&#xA;- TOPLAM MÜKELLEF&#xA;- POTANSİYEL MÜKELLEF&#xA;- FAAL MÜKEL.&#xA;- TERK MÜKEL.&#xA;- FAAL + TERK (TOPLAM TARH DOSYASI)" DisplayName="toplam mük._potansiyel mük._faal mük_terk mük._faal terk sütünlarının oluşturulması" sap:VirtualizedContainerService.HintSize="535,198" sap2010:WorkflowViewState.IdRef="Sequence_51">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="intIndex" />
                  <Variable x:TypeArguments="x:Int32" Name="intDtColIndex" />
                  <Variable x:TypeArguments="x:Int32" Name="intExcelColIndex" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dtToplamSatirlari" />
                  <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="473,61" sap2010:WorkflowViewState.IdRef="Assign_52">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:BuildDataTable DataTable="[dtToplamSatirlari]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="473,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Toplam_x0020_Mükellef&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Potansiyel_x0020_Mükellef&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Faal_x0020_Mükellef&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Terk_x0020_Mükellef&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Faal-Terk_x0020_Dosya_x0020_Sayisi&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtSQLData1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="473,52" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="satir" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,903" sap2010:WorkflowViewState.IdRef="Sequence_50">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_53">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtToplamSatirlari.NewRow]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: Potansiyel Mükellef" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_54">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Potansiyel Mükellef")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[CInt(satir.Item(5).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: Faal Mükellef" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_55">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal Mükellef")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[CInt(satir.Item(4).ToString) - CInt(satir.Item(5).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: Terk Mükellef" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_56">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Terk Mükellef")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[CInt(satir.Item(6).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: Toplam Mükellef" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_57">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Toplam Mükellef")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[CInt(satir.Item(5).ToString) + (CInt(satir.Item(4).ToString) - CInt(satir.Item(5).ToString)) + CInt(satir.Item(6).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: Faal-Terk Dosya Sayisi" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_58">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item("Faal-Terk Dosya Sayisi")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[(CInt(satir.Item(4).ToString) - CInt(satir.Item(5).ToString)) + CInt(satir.Item(6).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtToplamSatirlari]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="AddDataRow_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtToplamSatirlari]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="473,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[strSheetName]" StartingCell="D2" />
              </Sequence>
              <Sequence sap2010:Annotation.AnnotationText="Oluşturulan kolonlar:&#xA;- GELİR VERGİSİ &#xA;- KURUMLAR VERGİSİ &#xA;- KDV &#xA;- HASILAT ESASLI KDV &#xA;- GELİR STOPAJ &#xA;- ÖTV 1.LİSTE  &#xA;- ÖTV 4.LİSTE &#xA;- ÖTV 3A.LİSTE &#xA;- ÖTV 3B.LİSTE &#xA;- GMSİ&#xA;- BASİT USUL  &#xA;- GELİR GEÇİCİ &#xA;- KURUM GEÇİCİ " DisplayName="Gelir vergisi ile 0054 onceki kolonların oluştutulrması" sap:VirtualizedContainerService.HintSize="535,303" sap2010:WorkflowViewState.IdRef="Sequence_53">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="intIndex" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_59">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="6" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="5" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="4" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="3" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="2" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Enumerable.Range(0,CInt(dtSQLData1.ColumnCount/2))]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="kolon" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,297" sap2010:WorkflowViewState.IdRef="Sequence_52">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="[CInt(kolon) +1]" DataTable="[dtSQLData1]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_15" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSQLData1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="[strSheetName]" StartingCell="I2" />
              </Sequence>
              <Sequence sap2010:Annotation.AnnotationText="Oluşturulan Kolonlar:&#xA;- 0054-DIGITAL TAX / DİGİTAL H.V.&#xA; - 0054-DIGITAL TAX / DİGİTAL H.V.&#xA;0068- TURİZİM PAYI" DisplayName="Son 3 kolonun verilerinin oluşturulması" sap:VirtualizedContainerService.HintSize="535,153" sap2010:WorkflowViewState.IdRef="Sequence_54">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
                  <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_60">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_61">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeVBA OutputValue="{x:Null}" sap2010:Annotation.AnnotationText="" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 0054-DIGITAL TAX / DİGİTAL H.V." EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;BT3:BT&quot; + (CInt(firstEmptyRow)-1).ToString, strDestinationSheetName, &quot;W2&quot;}]" sap:VirtualizedContainerService.HintSize="338,119" sap2010:WorkflowViewState.IdRef="InvokeVBA_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:InvokeVBA OutputValue="{x:Null}" sap2010:Annotation.AnnotationText="" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 0055-VALUE ADDED TAX / KDV 3" EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;BV3:BV&quot; + (CInt(firstEmptyRow)-1).ToString, strDestinationSheetName, &quot;X2&quot;}]" sap:VirtualizedContainerService.HintSize="338,119" sap2010:WorkflowViewState.IdRef="InvokeVBA_20">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:InvokeVBA OutputValue="{x:Null}" sap2010:Annotation.AnnotationText="" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 0068- TURİZİM PAYI" EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;CJ3:CJ&quot; + (CInt(firstEmptyRow)-1).ToString, strDestinationSheetName, &quot;Y2&quot;}]" sap:VirtualizedContainerService.HintSize="338,119" sap2010:WorkflowViewState.IdRef="InvokeVBA_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
              </Sequence>
              <Sequence DisplayName="Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="462,905" sap2010:WorkflowViewState.IdRef="Sequence_58">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_62">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: İlk boş saıtırın bulumnası" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;B&quot;}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_22" OutputValue="[firstEmptyRow]" />
                <ui:ExcelReadRange DataTable="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="[&quot;A1:B&quot; + (CInt(firstEmptyRow.ToString)-1).ToString]" SheetName="[strSheetName]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Binlik Ayraç" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;D3:Y&quot; + (CInt(firstEmptyRow)-1).ToString}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_23" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Binlik Ayraç" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;A1:Y&quot; + (CInt(firstEmptyRow)-1).ToString}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_24" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Binlik Ayraç" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A1:Y&quot; + (CInt(firstEmptyRow)-1).ToString}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_25" />
                <Sequence DisplayName="Satırların Boyanması" sap:VirtualizedContainerService.HintSize="400,492" sap2010:WorkflowViewState.IdRef="Sequence_57">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intRowNumberForGrey" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtDeneme" />
                    <Variable x:TypeArguments="x:Int32" Name="intRowNumberForYellow" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: İlk boş saıtırın bulumnası" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;B&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_26" OutputValue="[firstEmptyRow]" />
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dtDeneme]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="[&quot;A1:B&quot; + (CInt(firstEmptyRow.ToString)-1).ToString]" SheetName="[strSheetName]" />
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_63">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intRowNumberForYellow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtDeneme]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,380" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="bosSatir" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_56">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[bosSatir.Item(0).ToString.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="779,587" sap2010:WorkflowViewState.IdRef="If_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,428" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="variable1" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_64">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intRowNumberForGrey]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[dtDeneme.Rows.IndexOf(bosSatir)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: GRİ" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot;+(intRowNumberForGrey +2).ToString + &quot;:Y&quot; +(intRowNumberForGrey +2).ToString, 192, 192, 192}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_27" />
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: GRİ" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot;+(intRowNumberForGrey +2).ToString + &quot;:Y&quot; +(intRowNumberForGrey +2).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_28" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: SARI" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot;+ intRowNumberForYellow.ToString + &quot;:Y&quot; +intRowNumberForYellow.ToString, 255, 255, 204}]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_29" />
                            </If.Else>
                          </If>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_65">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[intRowNumberForYellow]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[intRowNumberForYellow+1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                </Sequence>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_17" Workbook="[workBook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Sayfa SQL-data-iL için işleme başlanıldı. &quot;]" />
    <Sequence DisplayName="SQL-data-İL Sayfası" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtBaskanlikDefterdarlik" />
        <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbConnection" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtQuery_il" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtilAdiBaskanlikDefterdarlik" />
        <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
        <Variable x:TypeArguments="sd:DataTable" Name="dt5VdDokum" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtilk5Kolon" />
        <Variable x:TypeArguments="x:Int32" Name="intRowIndex" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtSQLData1" />
        <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtilBilgisi" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadExcelTemp workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Framework\ReadExcelTemp.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ExcelName">ilListesi</InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dataTable">[dtilBilgisi]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FirstColName">A</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LastColName">C</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FirstRowIndex">1</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LastRowIndex">82</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrSheetName">Sayfa1</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dtQuery_il]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dtQueryResult.DefaultView.ToTable(true,"VDKODU")]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="İl kodlarının başına 0 ekleme" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="PadLeft ile il kodlarınanın başına 0 eklenir, total 3hane olacak sekıde" DataTable="[dtilBilgisi]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,319" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item(1)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(1).ToString.PadLeft(3,"0"c).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Sequence DisplayName="İller ve türlerine ait datatable oluşturulması" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:BuildDataTable DataTable="[dtilAdiBaskanlikDefterdarlik]" DisplayName="Build Data Table: İller Ve Türleri" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;İlAdi&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;30&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;baskanlikDefterdarlik&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="illere karşılık gelen defterdarlık/başkanlık türlerinin oluşturulması" DataTable="[dtilBilgisi]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,411" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataRow">[dtilAdiBaskanlikDefterdarlik.NewRow]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtQuery_il]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ilKodu" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="546,380" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[CInt(ilKodu.Item(0).ToString.Substring(0,3).ToString) = CInt(CurrentRow.Item(1).ToString)]" sap:VirtualizedContainerService.HintSize="484,269" sap2010:WorkflowViewState.IdRef="If_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(0).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[CurrentRow.Item(2).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtilAdiBaskanlikDefterdarlik]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                              <ui:Break sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <Assign sap2010:Annotation.AnnotationText="alfabetik sıralama" DisplayName="Assign: İllerin alfabetik sıralanması" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="Assign_16">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dtilAdiBaskanlikDefterdarlik]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dtilAdiBaskanlikDefterdarlik.AsEnumerable.OrderBy(Function(row) row.Item(0)).CopyToDataTable()]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_19">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">SQL-data-İL</InArgument>
          </Assign.Value>
        </Assign>
        <ui:WriteRange AddHeaders="False" DataTable="[dtilAdiBaskanlikDefterdarlik]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="338,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[strSheetName]" StartingCell="A3" WorkbookPath="[strOutputFilePath]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:WriteRange>
      </Sequence>
      <ui:BuildDataTable DataTable="[dtilk5Kolon]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;TOPLAM_x0020_MÜKELLEF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;POTANSİYEL_x0020_MÜKELLEF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FAAL_x0020_MÜKEL.&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TERK_x0020_MÜKEL.&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FAAL_x0020__x002B__x0020_TERK_x0020__x0028_TOPLAM_x0020_TARH_x0020_DOSYASI_x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:BuildDataTable>
      <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_20">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">3</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="400,83" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="484,355" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Object" Name="intFirstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="5-Vd-döküm sayfasının C-D-E-F-G sütunlarının okunması &#xA;SQL-data-1 sayfasından verilerin okunmas" sap:VirtualizedContainerService.HintSize="422,123" sap2010:WorkflowViewState.IdRef="Sequence_203">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt5VdDokum]" DisplayName="Read Range: 5-Vd-dokum sayfasının okunması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="A1:H1129" SheetName="[strSheetName]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSQLData1]" DisplayName="Read Range: SQL-data-1 sayfasının okunması" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="A3:DC1129" SheetName="[strSheetName]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">SQL-data-İL</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtilBilgisi]" DisplayName="For Each Row in Data Table: Verilerin Yazılması" sap:VirtualizedContainerService.HintSize="558,1063" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524,947" sap2010:WorkflowViewState.IdRef="Sequence_29">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strColumnLetter" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="5-Vd-döküm sayfasından ilk 5 kolon bılgılerı alnır" sap:VirtualizedContainerService.HintSize="400,1151" sap2010:WorkflowViewState.IdRef="Sequence_23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_24">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[dtilk5Kolon.NewRow]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_25">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt5VdDokum.AsEnumerable.Where(function(row) row.Item("VD/MAL MÜDÜRLÜĞÜ ADI").ToString.Equals(CurrentRow.Item(0).ToString)).Select(function(row) CInt(row.Item("TOPLAM MÜKELLEF").ToString))(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt5VdDokum.AsEnumerable.Where(function(row) row.Item("VD/MAL MÜDÜRLÜĞÜ ADI").ToString.Equals(CurrentRow.Item(0).ToString)).Select(function(row) CInt(row.Item("POTANSİYEL MÜKELLEF").ToString))(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_27">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(2)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt5VdDokum.AsEnumerable.Where(function(row) row.Item("VD/MAL MÜDÜRLÜĞÜ ADI").ToString.Equals(CurrentRow.Item(0).ToString)).Select(function(row) CInt(row.Item("FAAL MÜKEL.").ToString))(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(3)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt5VdDokum.AsEnumerable.Where(function(row) row.Item("VD/MAL MÜDÜRLÜĞÜ ADI").ToString.Equals(CurrentRow.Item(0).ToString)).Select(function(row) CInt(row.Item("TERK MÜKEL.").ToString))(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_29">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(4)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt5VdDokum.AsEnumerable.Where(function(row) row.Item("VD/MAL MÜDÜRLÜĞÜ ADI").ToString.Equals(CurrentRow.Item(0).ToString)).Select(function(row) CInt(row.Item("FAAL + TERK (TOPLAM TARH DOSYASI)").ToString))(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtilk5Kolon]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                          <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtilk5Kolon]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[strSheetName]" StartingCell="[&quot;C&quot;+ intRowIndex.ToString]" />
                          <ui:ClearDataTable DataTable="[dtilk5Kolon]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="338,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                        </Sequence>
                        <Sequence DisplayName="SQL-data-İL sayfasından kalan kolon bilgileri alnır" sap:VirtualizedContainerService.HintSize="462,623" sap2010:WorkflowViewState.IdRef="Sequence_25">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="dtNewData" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_30">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataTable">[dtNewData]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_31">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataTable">[dtNewData]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataTable">[dtSQLData1.AsEnumerable.Where(function(row) row.Item(1).ToString.Trim.Equals(CurrentRow.Item(0).ToString.Trim)).CopyToDataTable()]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Remove Column" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="6" DataTable="[dtNewData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="5" DataTable="[dtNewData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2" />
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="4" DataTable="[dtNewData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_3" />
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="3" DataTable="[dtNewData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_4" />
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="2" DataTable="[dtNewData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_5" />
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DataTable="[dtNewData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_6" />
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DataTable="[dtNewData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_7" />
                          </Sequence>
                          <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewData]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[strSheetName]" StartingCell="[&quot;H&quot;+ intRowIndex.ToString]" />
                          <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_32">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[intRowIndex+1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="462,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="642,1391" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt5VdDokum]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="580,1280" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                <ui:ForEachRow.Body>
                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ilAdi" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="546,1165" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[CurrentRow.Item(0).ToString.ToUpper.Trim.Equals(ilAdi.Item(&quot;VD/MAL MÜDÜRLÜĞÜ ADI&quot;).ToString.ToUpper.Trim)]" sap:VirtualizedContainerService.HintSize="484,1054" sap2010:WorkflowViewState.IdRef="If_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,867" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_33">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[CInt(ilAdi.Item(3).ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_34">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[CInt(ilAdi.Item(4).ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_35">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(2)]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[CInt(ilAdi.Item(5).ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_36">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(3)]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[CInt(ilAdi.Item(6).ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_37">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(4)]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[CInt(ilAdi.Item(7).ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtilk5Kolon]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                                            <ui:Break sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Break_2" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEachRow.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEachRow>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
              <Sequence DisplayName="Toplam satırının ve altındaki toplam satırlarının oluştuşturulması" sap:VirtualizedContainerService.HintSize="422,81" sap2010:WorkflowViewState.IdRef="Sequence_204">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_38">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">SQL-data-İL</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;H&quot;}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" OutputValue="[firstEmptyRow]" />
                <Sequence DisplayName="İllere göre toplam satırnın oluşturulması" sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_31">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="RangeColumnSum" EntryMethodParameters="[{strSheetName, &quot;C84&quot;, &quot;C84:DC84&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_3" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot; + (CInt(firstEmptyRow)).ToString]" DisplayName="Write Cell: İllerin altında bulunun toplam satırı " sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[strSheetName]" Text="TOPLAM">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelWriteCell>
                </Sequence>
                <Sequence DisplayName="illerin altındaki tablonun oluşturulması" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_32">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="CopyPasteWithFormat" EntryMethodParameters="[{strSheetName, &quot;A1:DC2&quot;, &quot;A&quot; + (CInt(firstEmptyRow)).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_4" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot; + (CInt(firstEmptyRow) +2).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[strSheetName]" Text="BAŞKANLIK" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot; + (CInt(firstEmptyRow) +3).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[strSheetName]" Text="DEFTERDARLIK" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot; + (CInt(firstEmptyRow) +4).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[strSheetName]" Text="TOPLAM" />
                </Sequence>
                <Sequence DisplayName="İllerin altında bulunun tablonun verilerinin oluştutulması" sap:VirtualizedContainerService.HintSize="560,1548" sap2010:WorkflowViewState.IdRef="Sequence_41">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dtForSumColumns" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelReadRange AddHeaders="False" DataTable="[dtForSumColumns]" DisplayName="Read Range: Kullanılacak verilerin datatable alınması" sap:VirtualizedContainerService.HintSize="498,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" Range="[&quot;A3:DC&quot; + (CInt(firstEmptyRow)-2).ToString]" SheetName="[strSheetName]" />
                  <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="498,1216" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(2, dtForSumColumns.ColumnCount-2)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Int32">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Int32" Name="intColumnIndex" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="462,1091" sap2010:WorkflowViewState.IdRef="Sequence_39">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="dtNewData" />
                            <Variable x:TypeArguments="x:Int32" Name="intToplamBaskanlik" />
                            <Variable x:TypeArguments="x:String" Name="strColName" />
                            <Variable x:TypeArguments="x:Int32" Name="intToplamDefterdarlik" />
                            <Variable x:TypeArguments="x:Int32" Name="intGenelToplam" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_39">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intColumnIndex]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[CInt(intColumnIndex)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColumnIndex+1]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strColName]</OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_40">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataTable">[dtNewData]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Başkanlık toplamı" sap:VirtualizedContainerService.HintSize="400,392" sap2010:WorkflowViewState.IdRef="Sequence_35">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_41">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[dtNewData]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[dtForSumColumns.AsEnumerable.Where(Function(row) row.Item(1).ToString.Trim.Equals("Başkanlık")).CopyToDataTable]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_42">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intToplamBaskanlik]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[dtForSumColumns.AsEnumerable.Where(Function(row) row.Item(1).ToString.Trim.Equals("Başkanlık")).CopyToDataTable.AsEnumerable.sum(function(row) CInt(row.Item(intColumnIndex).ToString))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelWriteCell Cell="[strColName + (CInt(firstEmptyRow)+2).ToString]" DisplayName="Write Cell: Başkanlık" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[strSheetName]" Text="[intToplamBaskanlik.ToString]" />
                          </Sequence>
                          <Sequence DisplayName="Defterdalık toplamı" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_37">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_43">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[dtNewData]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[dtForSumColumns.AsEnumerable.Where(Function(row) row.Item(1).ToString.Trim.Equals("Başkanlık")).CopyToDataTable]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_44">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intToplamDefterdarlik]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[dtForSumColumns.AsEnumerable.Where(Function(row) row.Item(1).ToString.Trim.Equals("Defterdarlık")).CopyToDataTable.AsEnumerable.sum(function(row) CInt(row.Item(intColumnIndex).ToString))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelWriteCell Cell="[strColName + (CInt(firstEmptyRow)+3).ToString]" DisplayName="Write Cell: Başkanlık" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[strSheetName]" Text="[intToplamDefterdarlik.ToString]" />
                          </Sequence>
                          <Sequence DisplayName="Genel Toplam" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_38">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_45">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intGenelToplam]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[intToplamBaskanlik + intToplamDefterdarlik]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelWriteCell Cell="[strColName + (CInt(firstEmptyRow) +4).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[strSheetName]" Text="[intGenelToplam.ToString]" />
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <Sequence DisplayName="Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="498,81" sap2010:WorkflowViewState.IdRef="Sequence_40">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A1:DC&quot; + (CInt(firstEmptyRow)+4).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_5" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A3:DC&quot; + (CInt(firstEmptyRow)+4).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_6" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 1. tablo" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;A3:DC&quot; + (CInt(firstEmptyRow)-1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_7" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;A3:DC&quot; + (CInt(firstEmptyRow)+4).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_8" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: İlk toplam satırı" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; +  (CInt(firstEmptyRow)-1).ToString + &quot;:DC&quot; + (CInt(firstEmptyRow)-1).ToString, 204, 255, 255}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_9" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Başkanlık satırı" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (CInt(firstEmptyRow)+2).ToString+ &quot;:DC&quot; + (CInt(firstEmptyRow)+2).ToString, 253, 233, 217}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_10" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Defterdarlık satırı" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (CInt(firstEmptyRow)+3).ToString+ &quot;:DC&quot; + (CInt(firstEmptyRow)+3).ToString, 204, 255, 255}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_11" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 2. toplam İlk toplam satırı" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (CInt(firstEmptyRow)+4).ToString+ &quot;:DC&quot; + (CInt(firstEmptyRow)+4).ToString, 204, 255, 255}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_12" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 2. tablo" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (CInt(firstEmptyRow)+2).ToString +&quot;:DC&quot; + (CInt(firstEmptyRow)+4).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_13" />
                  </Sequence>
                </Sequence>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_18" Workbook="[workBook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Sayfa5-Vd-dokum-alınamayan için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="5-Vd-dokum-alınamayan Sayfası" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_65">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,643" sap2010:WorkflowViewState.IdRef="Sequence_64">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
                <Variable x:TypeArguments="x:String" Name="strDestinationSheetName" />
                <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_66">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_67">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strDestinationSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["5-Vd-döküm_alınmayan"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: İlk boş saıtırın bulumnası" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;H&quot;}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_30" OutputValue="[firstEmptyRow]" />
              <Sequence DisplayName="ilk 7 kolon" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_62">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_68">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeVBA OutputValue="{x:Null}" sap2010:Annotation.AnnotationText="5-Vd-dokum sayfasından aşağıdaki sütünlar kopyalanarak yeni sayfanın ilk 7 sütunuun verisi oluşturulur:&#xA;- VDKODU&#xA;- VD/MAL MÜDÜRLÜĞÜ ADI&#xA;- DURUM&#xA;- TOPLAM MÜKELLEF&#xA;- POTANSİYEL MÜKELLEF&#xA;- FAAL MÜKEL.&#xA;- TERK MÜKEL." CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: ilk 7 kolonun kopyalaınıp yapıştırılması" EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;A2:G&quot; + (CInt(firstEmptyRow)-1).ToString, strDestinationSheetName, &quot;A3&quot;}]" sap:VirtualizedContainerService.HintSize="338,250" sap2010:WorkflowViewState.IdRef="InvokeVBA_31">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
              </Sequence>
              <Sequence DisplayName="8. kolon ve devamı" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_63">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_69">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeVBA OutputValue="{x:Null}" sap2010:Annotation.AnnotationText="SQL-data-1 sayfasından veriler alınır.&#xA;8 kolon ve devamındaki kolonarın verisi oluşturulur:" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: 8. kolon ve devanımdaki kolonların kopyalaınıp yapıştırılması" EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;H3:DC&quot; + (CInt(firstEmptyRow)-1).ToString, strDestinationSheetName, &quot;H3&quot;}]" sap:VirtualizedContainerService.HintSize="338,130" sap2010:WorkflowViewState.IdRef="InvokeVBA_32">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_19" Workbook="[workBook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Sayfa 4-il-döküm için işleme başlanıldı. &quot;]" />
    <Sequence DisplayName="4-İl-döküm Sayfası" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_73">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtilBilgisi" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,434" sap2010:WorkflowViewState.IdRef="Sequence_77">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dt5VdDokum" />
                <Variable x:TypeArguments="x:String" Name="strLastColName" />
                <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Verilerin 5-Vd-data sayfasından okunması" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_78">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_78">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">5-Vd-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: İlk boş saıtırın bulumnası" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;B&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_41" OutputValue="[firstEmptyRow]" />
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt5VdDokum]" DisplayName="Read Range: 5-Vd-dokum sayfasının datatable'a alınması" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" Range="[&quot;A1:Y&quot; +((CInt(firstEmptyRow.ToString)-1)).ToString]" SheetName="[strSheetName]" />
              </Sequence>
              <Sequence DisplayName="Verilern yazılması" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_74">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="intRowIndex" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_79">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["4-İl-döküm"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="379,65" sap2010:WorkflowViewState.IdRef="Assign_80">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dt5VdDokum]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[If(dt5VdDokum.AsEnumerable.Any(Function(row) (row.Item(0).ToString.Trim.Equals(""))),
dt5VdDokum.AsEnumerable.Where(Function(row) (row.Item(0).ToString.Trim.Equals(""))).CopyToDataTable, New DataTable()
)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="2" DataTable="[dt5VdDokum]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DataTable="[dt5VdDokum]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RemoveDataColumn>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[dt5VdDokum.ColumnCount]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt5VdDokum]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="[strSheetName]" StartingCell="A2" />
                <ui:ExcelWriteCell Cell="[&quot;A&quot; + (dt5VdDokum.RowCount +2).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[strSheetName]" Text="TOPLAM" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="RangeColumnSum" EntryMethodParameters="[{strSheetName, &quot;B&quot; + (dt5VdDokum.RowCount +2).ToString, &quot;B&quot; + (dt5VdDokum.RowCount +2).ToString + &quot;:&quot; + strLastColName +(dt5VdDokum.RowCount +2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_42" />
              </Sequence>
              <Sequence DisplayName="Hücre biçimlendirme" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_76">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A2:&quot; + strLastColName + (dt5VdDokum.RowCount +3).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_44" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;B2:&quot; + strLastColName + (dt5VdDokum.RowCount +2).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_45" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;A1:&quot;+ strLastColName + (dt5VdDokum.RowCount +2).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_46" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A1:&quot; + strLastColName + (dt5VdDokum.RowCount +2).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_47" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (dt5VdDokum.RowCount +2).ToString+&quot;:&quot; + strLastColName + (dt5VdDokum.RowCount +2).ToString, 153, 204, 255}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_48" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_20" Workbook="[workBook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Sayfa 3-ŞİRKET TURLERİ için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="3-Şirket Türleri Sayfası (Sorgu3)" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_84">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtQuery3Result" />
        <Variable x:TypeArguments="scg:List(x:Int32)" Name="intListSirketTuru" />
        <Variable x:TypeArguments="scg:List(x:Int32)" Name="intListKriter" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtSirketTuru" />
        <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
        <Variable x:TypeArguments="x:String" Name="strLastColName" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_81">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSheetname]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">3-Şirket-Türleri</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtQuery3Result]" DisplayName="Run query" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="[in_Config(&quot;sql3&quot;).ToString]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
      </ui:ExecuteQuery>
      <ui:BuildDataTable DataTable="[dtSirketTuru]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_4" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ŞİRKET_x0020_TÜRÜ&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FAAL&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; default=&quot;-1&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TERK&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TOPLAM&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_82">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:Int32)">[intListSirketTuru]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:Int32)">[dtQuery3Result.DefaultView.ToTable(True,"SIRKETTURU").AsEnumerable.OrderBy(Function(row) CInt(row.Item("SIRKETTURU").ToString)).CopyToDataTable().AsEnumerable.Select(Function(row) CInt(row.Item("SIRKETTURU").ToString)).ToList()]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_293">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:Int32)">[intListSirketTuru]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:Int32)">[dtQuery3Result.DefaultView.ToTable(True,"SIRKETTURU").AsEnumerable.OrderBy(Function(row) CInt(row.Item("SIRKETTURU").ToString)).CopyToDataTable().AsEnumerable.Select(Function(row) CInt(row.Item("SIRKETTURU").ToString)).ToList()]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_83">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:Int32)">[intListKriter]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:Int32)">[dtQuery3Result.DefaultView.ToTable(True,"KRITER").AsEnumerable.OrderBy(Function(row) CInt(row.Item("KRITER").ToString)).CopyToDataTable().AsEnumerable.Select(Function(row) CInt(row.Item("KRITER").ToString)).ToList()]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_19" Values="[intListSirketTuru]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Int32">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="sirketTuru" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,751" sap2010:WorkflowViewState.IdRef="Sequence_82">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="intToplamTerk" />
                <Variable x:TypeArguments="x:Int32" Name="intToplamFaal" />
                <Variable x:TypeArguments="x:String" Name="newSirketTuru" />
                <Variable x:TypeArguments="x:Int32" Name="intToplam" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_84">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataRow">[dtSirketTuru.NewRow()]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[intListKriter]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Int32">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="kriter" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,163" sap2010:WorkflowViewState.IdRef="Sequence_81">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[kriter = 1]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,277" sap2010:WorkflowViewState.IdRef="Sequence_79">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="338,65" sap2010:WorkflowViewState.IdRef="Assign_85">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intToplamFaal]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[If(dtQuery3Result.AsEnumerable.Any(
Function(row) CInt(row.Item("SIRKETTURU").ToString)=sirketTuru And CInt(row.Item("KRITER").ToString)=kriter),
dtQuery3Result.AsEnumerable.Where(
Function(row) CInt(row.Item("SIRKETTURU").ToString)=sirketTuru And CInt(row.Item("KRITER").ToString)=kriter).Sum(Function(row) CInt(row.Item("MUKSAYISI").ToString)), 0)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_86">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[intToplamFaal]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_80">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_87">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intToplamTerk]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[If(dtQuery3Result.AsEnumerable.Any(
Function(row) CInt(row.Item("SIRKETTURU").ToString)=sirketTuru And CInt(row.Item("KRITER").ToString)=kriter),
dtQuery3Result.AsEnumerable.Where(
Function(row) CInt(row.Item("SIRKETTURU").ToString)=sirketTuru And CInt(row.Item("KRITER").ToString)=kriter).Sum(Function(row) CInt(row.Item("MUKSAYISI").ToString)), 0)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(2)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[intToplamTerk]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_89">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[intToplamFaal + intToplamTerk]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_90">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(3)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[intToplam]</InArgument>
                </Assign.Value>
              </Assign>
              <Switch x:TypeArguments="x:Int32" DisplayName="Switch" Expression="[sirketTuru]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign x:Key="1" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Gerçek Kişi</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="2" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Adi Ortaklık</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="3" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Kollektif Şirket</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="4" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Adi Kom. Şti.</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="5" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Esh. Kom. Şti.</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="6" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Limited Şirket</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="7" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Anonim Şirket</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="8" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Kooperatif</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="9" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Diğer Tüzel Kişilik</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="10" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Avukatlık Ortaklığı</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="11" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">İş Ortaklığı</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="12" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Banka Şubesi</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="13" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">KDV3-DHV Mükellefi</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="14" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Elbirliği Mülkiyeti</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="15" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Dernek İşletmesi</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="16" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Vakıf İşletmesi</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="17" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_107">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newSirketTuru]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">Merkezi Yurt Dışında Bulunan Şube    </InArgument>
                  </Assign.Value>
                </Assign>
              </Switch>
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_108">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[newSirketTuru]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtSirketTuru]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AddDataRow>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <Sequence DisplayName="Toplam Satırının Eklenmesi" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Sequence_83">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_109">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataRow">[dtSirketTuru.NewRow()]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_110">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">["TOPLAM"]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_111">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[dtSirketTuru.AsEnumerable.Sum(Function(row) CInt(row.Item("FAAL").ToString))]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_112">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(2)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[dtSirketTuru.AsEnumerable.Sum(Function(row) CInt(row.Item("TERK").ToString))]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_113">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(3)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[dtSirketTuru.AsEnumerable.Sum(Function(row) CInt(row.Item("TOPLAM").ToString))]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtSirketTuru]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataRow>
      </Sequence>
      <ui:WriteRange AddHeaders="False" DataTable="[dtSirketTuru]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="[strSheetName]" StartingCell="A10" WorkbookPath="[strOutputFilePath]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[dtSirketTuru.ColumnCount]</InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,309" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_33" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,199" sap2010:WorkflowViewState.IdRef="Sequence_220">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A10:D27&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_138" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_23" Workbook="[workbook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Sayfa 2-TURKIYE DOKUM için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="2-Türkiye Döküm Sayfası" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_92">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtVergiTurleri" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadExcelTemp workflow" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\ReadExcelTemp.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ExcelName">VergiTurleri</InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dataTable">[dtVergiTurleri]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FirstColName">A</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LastColName">B</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FirstRowIndex">1</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LastRowIndex">51</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrSheetName">Sayfa1</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="FAAL" DataTable="[dtVergiTurleri]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:AddDataColumn>
      <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="TERK" DataTable="[dtVergiTurleri]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:AddDataColumn>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,1291" sap2010:WorkflowViewState.IdRef="Sequence_91">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strLastColName" />
                <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_114">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">SQL-data-İL</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;H&quot;}]" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_49" OutputValue="[firstEmptyRow]" />
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="vergi türlerini içeren excel okunduktan sonra, her bir vergi türü için (datatable daki her row için) arama yapılır. vegi türüne karşılık gelen faal ve terk kolonlarının verileri alınarak dataTable'a eklenir. Sonuç olarak exclee yazdırılacak verinin tamamı elde edilmiş olur." DataTable="[dtVergiTurleri]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,269" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_89">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Object" Name="objFindText" />
                        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
                        <Variable x:TypeArguments="x:String" Name="strColLetter" />
                        <Variable x:TypeArguments="x:Double" Name="strFaal" />
                        <Variable x:TypeArguments="x:Int32" Name="strColLetterNumber" />
                        <Variable x:TypeArguments="x:Double" Name="strTerk" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Not CurrentRow.Item(0).ToString.Trim.Equals(&quot;POTANSİYEL MÜKELLEF TOPLAMI&quot;)]" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="If_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Else>
                          <Sequence sap2010:Annotation.AnnotationText="Potansiyel Mükellef için sadece Faal kolonu doldurulur." sap:VirtualizedContainerService.HintSize="400,112" sap2010:WorkflowViewState.IdRef="Sequence_86">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{CurrentRow.Item(1).ToString, strSheetName, &quot;D&quot; + (CInt(firstEmptyRow.ToString)-4).ToString + &quot;:&quot; + &quot;DC&quot; + (CInt(firstEmptyRow.ToString)-4).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_50" OutputValue="[objFindText]" />
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_115">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_116">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strColLetter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[objFindText.ToString.Substring(0,1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelReadCell Cell="[strColLetter + (intRowNumber+3).ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[strSheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:Double">[strFaal]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_117">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("FAAL")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">[strFaal]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{CurrentRow.Item(1).ToString, strSheetName, &quot;D&quot; + (CInt(firstEmptyRow.ToString)-5).ToString + &quot;:&quot; + &quot;DC&quot; + (CInt(firstEmptyRow.ToString)-5).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_51" OutputValue="[objFindText]" />
                      <If Condition="[objFindText.ToString.Length &lt;= 3]" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="If_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap2010:Annotation.AnnotationText="H85 şeklinde is" sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_87">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_118">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_119">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strColLetter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[objFindText.ToString.Substring(0,1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:Annotation.AnnotationText="HA85 şeklinde ise" sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_88">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_120">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(2).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_121">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strColLetter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[objFindText.ToString.Substring(0,2).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[strColLetter + (intRowNumber +4).ToString]" DisplayName="Read Cell: FAAL Hücresi Okunur" sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[strSheetName]">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="x:Double">[strFaal]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <Assign DisplayName="Assign: Faal Kolonuna Ait Row Doldurulur" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_122">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("FAAL")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">[strFaal]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_82" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[strColLetterNumber]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strColLetter]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[strColLetterNumber + 1]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strColLetter]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:ExcelReadCell Cell="[strColLetter + (intRowNumber +4).ToString]" DisplayName="Read Cell: Terk  Hücresi Okunur" sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[strSheetName]">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="x:Double">[strTerk]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <Assign DisplayName="Assign: Terk Kolonuna Ait Row Doldurulur" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_123">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("TERK")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">[strTerk]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_124">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">2-Türkiye-döküm</InArgument>
                </Assign.Value>
              </Assign>
              <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" sap2010:Annotation.AnnotationText="kolon 1 ve kolon 2 aynı değerler faklı yazım şekillerini ifade eder. İşlem sonrasında excele kolon 2 aktarılmayacağı için kaldırılır." ColumnIndex="1" DataTable="[dtVergiTurleri]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="434,139" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:RemoveDataColumn>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[dtVergiTurleri.ColumnCount]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtVergiTurleri]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="[strSheetName]" StartingCell="A9" />
              <Sequence DisplayName="Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Sequence_90">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;B8:&quot; + strLastColName + (dtVergiTurleri.RowCount +8).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_52" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;A8:&quot;+ strLastColName + (dtVergiTurleri.RowCount +8).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_53" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AddRow" EntryMethodParameters="[{strSheetName, &quot;27:27&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_54" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A8:&quot; + strLastColName +&quot;26&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_55" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A31:&quot; + strLastColName +&quot;62&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_56" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_21" Workbook="[workBook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Sayfa 1-SICIL KAYNAK için işleme başlanıldı.&quot;]" />
    <Sequence DisplayName="1-Sicil-Kaynak-Döküm Sayfası" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_104">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtSicilKaynakDokum" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadExcelTemp workflow" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Framework\ReadExcelTemp.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ExcelName">SicilSayfasıVerileri</InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dataTable">[dtSicilKaynakDokum]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FirstColName">A</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LastColName">B</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FirstRowIndex">1</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LastRowIndex">10</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrSheetName">Sayfa1</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_14" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="642,2228" sap2010:WorkflowViewState.IdRef="Sequence_103">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="intRowIndex" />
                <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_125">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;H&quot;}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_57" OutputValue="[firstEmptyRow]" />
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_126">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">8</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="vergi türlerini içeren excel okunduktan sonra, her bir vergi türü için (datatable daki her row için) arama yapılır. vegi türüne karşılık gelen faal ve terk kolonlarının verileri alınarak dataTable'a eklenir. Sonuç olarak exclee yazdırılacak verinin tamamı elde edilmiş olur." DataTable="[dtSicilKaynakDokum]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="580,1665" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="546,1492" sap2010:WorkflowViewState.IdRef="Sequence_101">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Object" Name="objFindText" />
                        <Variable x:TypeArguments="x:Int32" Name="intRowNumber" />
                        <Variable x:TypeArguments="x:String" Name="strFirstColLetter" />
                        <Variable x:TypeArguments="x:Double" Name="strFaal" />
                        <Variable x:TypeArguments="x:Int32" Name="strColLetterNumber" />
                        <Variable x:TypeArguments="x:Double" Name="strTerk" />
                        <Variable x:TypeArguments="x:String" Name="strLastColLetter" />
                        <Variable x:TypeArguments="sd:DataTable" Name="dtRangeValue" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[CurrentRow.Item(1).ToString.Trim.Equals(&quot;bos&quot;)]" sap:VirtualizedContainerService.HintSize="484,269" sap2010:WorkflowViewState.IdRef="If_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_96">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="569,61" sap2010:WorkflowViewState.IdRef="Assign_127">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">1-Sicil-Kaynak-Döküm</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelWriteCell Cell="[&quot;A&quot;+intRowIndex.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="569,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="[strSheetName]" Text="[CurrentRow.Item(0).ToString]" />
                            <If Condition="[CurrentRow.Item(0).ToString.Trim.Equals(&quot;VERGİ DAİRELERİ TOPLAMI&quot;)]" DisplayName="If: Genel Toplam mı, Vergi Daireleri Toplamı mı" sap:VirtualizedContainerService.HintSize="569,52" sap2010:WorkflowViewState.IdRef="If_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="SumOfFourCell" EntryMethodParameters="[{strSheetName, &quot;B&quot; + intRowIndex.ToString, &quot;B&quot; + intRowIndex.ToString + &quot;:G&quot; +intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_58" />
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: SARI" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString, 255, 255, 0}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_59" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,327" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="SumOfTwoCell" EntryMethodParameters="[{strSheetName, &quot;B&quot; + intRowIndex.ToString, &quot;B&quot; + intRowIndex.ToString + &quot;:G&quot; +intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_60" />
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: YEŞİL" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString, 204, 255, 204}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_61" />
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="569,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_62" />
                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;B&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="569,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_63" />
                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="569,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_64" />
                            <If Condition="[CurrentRow.Item(0).ToString.Trim.Equals(&quot;VERGİ DAİRELERİ TOPLAMI&quot;)]" DisplayName="If: İndex artışı 2 mi 3 mü?" sap:VirtualizedContainerService.HintSize="569,219" sap2010:WorkflowViewState.IdRef="If_10">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_128">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[intRowIndex + 2]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_129">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[intRowIndex + 3]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                            <ui:Continue sap:VirtualizedContainerService.HintSize="569,25" sap2010:WorkflowViewState.IdRef="Continue_2" />
                          </Sequence>
                        </If.Then>
                      </If>
                      <Assign sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="Assign_130">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">SQL-data-1</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{CurrentRow.Item(1).ToString, strSheetName, &quot;K&quot; + (CInt(firstEmptyRow.ToString)+3).ToString + &quot;:K&quot; + (CInt(firstEmptyRow.ToString)+16).ToString}]" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_65" OutputValue="[objFindText]" />
                      <If Condition="[objFindText.ToString.Length &lt;= 3]" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="If_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap2010:Annotation.AnnotationText="H85 şeklinde is" sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_97">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_131">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_132">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFirstColLetter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[objFindText.ToString.Substring(0,1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:Annotation.AnnotationText="H185 şeklinde ise" sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_98">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_133">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intRowNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CInt(objFindText.ToString.Substring(1).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_134">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFirstColLetter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[objFindText.ToString.Substring(0,1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                      <Sequence DisplayName="Kolon Harf Bulma" sap:VirtualizedContainerService.HintSize="484,81" sap2010:WorkflowViewState.IdRef="Sequence_99">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_83" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[strColLetterNumber]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strFirstColLetter]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[strColLetterNumber + 1]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strFirstColLetter]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[strColLetterNumber]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strFirstColLetter]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[strColLetterNumber + 6]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColLetter]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtRangeValue]" DisplayName="Read Range: verilerin DataTable'a alınması" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_15" Range="[strFirstColLetter + intRowNumber.ToString + &quot;:&quot; + strLastColLetter +intRowNumber.ToString]" SheetName="[strSheetName]" />
                      <Assign sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="Assign_135">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">1-Sicil-Kaynak-Döküm</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExcelWriteCell Cell="[&quot;A&quot; +intRowIndex.ToString]" DisplayName="Write Cell: Satır Adi Yazma" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="[strSheetName]" Text="[CurrentRow.Item(0).ToString]" />
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtRangeValue]" DisplayName="Write Range: Değer Yazma" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="[strSheetName]" StartingCell="[&quot;B&quot; +intRowIndex.ToString]" />
                      <Sequence DisplayName="Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="484,81" sap2010:WorkflowViewState.IdRef="Sequence_100">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_66" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;B&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_67" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_68" />
                      </Sequence>
                      <If Condition="[CurrentRow.Item(0).ToString.Trim.Equals(&quot;MALMÜDÜRLÜKLERİ TOPLAMI&quot;)]" DisplayName="If: HÜcre içeriğine göre index arttırma -&gt; 1 mi 2 mi artacak" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="If_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_136">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[intRowIndex+2]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_137">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[intRowIndex+1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <Sequence DisplayName="Alt Satır Notlarının Oluşturulması ve Biçimlendirilmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_102">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="[&quot;A&quot; +(intRowIndex+3).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="[strSheetName]" Text="Tek Vergi Dairesi Başkanlığı Modeli  : Tek Vergi Dairesi Başkanlığı Modeli (Örnek : Eskişehir VDB.)" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_69" />
                <ui:ExcelWriteCell Cell="[&quot;A&quot; +(intRowIndex+4).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="[strSheetName]" Text="Vergi Dairesi                                          : Motorlu Taşıtlar ve KDV İhtisas Vergi dairesi dışında kalan vergi daireleri (Örnek : Çankaya Vd, Beyoğlu Vd.)" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_70" />
                <ui:ExcelWriteCell Cell="[&quot;A&quot; +(intRowIndex+5).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="[strSheetName]" Text="Motorlu Taşıtlar Vergi Dairesi             : Sadece Motorlu Taşıtlar için işlem yapan vergi dairesi (MOTOP VD.) (Örnek : Yeğenbey Vd.)" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + intRowIndex.ToString + &quot;:G&quot;+ intRowIndex.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_71" />
              </Sequence>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_10" Range="K1" SheetName="[strSheetName]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_22" Workbook="[workBook]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;RAPOR TARIHI eklenmesine başlanıldı.&quot;]" />
    <Sequence DisplayName="İlk 3 sayfaya rapor tarihi eklenmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_109">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_15" InstanceCachePeriod="3000" Visible="False" Workbook="[workBook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="462,499" sap2010:WorkflowViewState.IdRef="Sequence_108">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="1-Sicil-Kaynak-Döküm" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_105">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_138">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetname]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">1-Sicil-Kaynak-Döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="[strSheetName]" Text="[&quot;RAPOR TARİHİ: &quot; + today.ToString(&quot;dd.MMMM.yyyy&quot;,new CultureInfo(&quot;tr-TR&quot;)).ToUpper]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="HRightAlign" EntryMethodParameters="[{strSheetName, &quot;A4&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_72" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A4&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_73" />
                <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_1" Range="A5" SheetName="[strSheetName]" />
              </Sequence>
              <Sequence DisplayName="2-Türkiye-döküm" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_106">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_139">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetname]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">2-Türkiye-döküm</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="[strSheetName]" Text="[&quot;RAPOR TARİHİ: &quot; + today.ToString(&quot;dd.MMMM.yyyy&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteCell>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="HRightAlign" EntryMethodParameters="[{strSheetName, &quot;A5&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_74">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A5&quot;}]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_75">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_2" Range="A7" SheetName="[strSheetName]" />
              </Sequence>
              <Sequence DisplayName="3-Şirket-Türleri" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_107">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_140">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetname]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">3-Şirket-Türleri</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="[strSheetName]" Text="[&quot;RAPOR TARİHİ: &quot; + today.ToString(&quot;dd.MMMM.yyyy&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteCell>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="HRightAlign" EntryMethodParameters="[{strSheetName, &quot;A6&quot;}]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_76">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A6&quot;}]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_77">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_3" Range="A7" SheetName="[strSheetName]" />
              </Sequence>
              <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="400,25" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[workBook]" />
    </Sequence>
    <AddToCollection x:TypeArguments="x:String" Collection="[io_strListAttachments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="400,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[strOutputFilePath]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DBDisconnect workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="Framework\DBDisconnect.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:DatabaseConnection)" x:Key="in_dictDBConnections">[in_dictDBConnections]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Raporlama 1 sequence tamamlandı. &quot; + Now.ToString]" />
  </Sequence>
</Activity>